workspace:
    base: /srv
    path: docker-volumes-local/user-script-build-docker

pipeline:

  build:
    image: dotmpe/treebox:latest
    volumes:
     - ${HOME}/bin:/srv/docker-volumes-local/user-script/
    commands:
     - export USER=treebox;
       export HOME=/home/treebox;
       DEBIAN_FRONTEND=noninteractive sudo apt-get update -qqy &&
       DEBIAN_FRONTEND=noninteractive sudo apt-get install -qqy
             tidy pv
             php7.0-cli php-dom
             ruby-bundler
             python-dev python-yaml python-tox
             libffi-dev ntpdate && sudo rm -rf /var/cache/apt/*
     - echo PATH=$PATH
     - export PATH=$PATH:$HOME/bin:$HOME/bin/vendor/bin:$HOME/.basher/bin:$HOME/.basher/cellar/bin:$HOME/usr/bin:$HOME/.local/bin/
     #- export PYTHONPATH=$PYTHONPATH:$HOME/bin:$HOME/lib/py
     - echo PATH=$PATH
     - SCR_SYS_SH=bash-sh
     - export LOG=/srv/docker-volumes-local/user-script/log.sh
     - cd /srv/docker-volumes-local/user-script ;
       . "${DRONE_ENV:=".meta/package/envs/main.sh"}" ;
       scriptname="before-install" ;
       . ./tools/sh/init.sh ;
       . ./tools/sh/env.sh ;
       . ./tools/ci/parts/init.sh ;
       scriptname=install ;
       mkdir /home/treebox/build ;
       sudo=sudo UCONF=$HOME/etc Build_Deps_Default_Paths=1 . ./tools/ci/parts/install.sh

#       . ./tools/ci/parts/install.sh

#  hackyhack:
#    image: dotmpe/alpine-docker:edge
#    volumes:
#     - /var/run/docker.sock:/var/run/docker.sock
#    commands:
#     - docker commit drone_step_0 ubuntu-user-script:build
#     - docker tag ubuntu-user-script:build localhost:5000/ubuntu-user-script:build
#     - docker push localhost:5000/ubuntu-user-script:build
#     #- docker tag ubuntu-user-script:build freyr/ubuntu-user-script:build
#     #- docker push freyr/ubuntu-user-script:build
#     #- docker rmi ubuntu-user-script:build localhost:5000/ubuntu-user-script:build
