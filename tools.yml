id: "#"
description: Named prerequisite packages and metadata on provisioning. See tools.rst
scriptpath: .
libs:

tools:
# XXX: cleanup
#https://raw.githubusercontent.com/aspiers/git-config/master/bin/git-annex-finddups
  aha:
    installer: git+make
    description: |
        ANSI HTML Adapter for convertion ANSI to HTML
        TODO: project needs `make && make install`, cant use basher or git
        installers directly.
    src: https://github.com/theZiz/aha.git

  ajv:
    installer: NPM

  ajv-cli:
    installer: NPM
    bin: ajv-cli

  Bash:
    required: true

  Basher:
    bin: basher
    installer: Git
    branch: feature/better-package-env
    repo: https://github.com/dotmpe/basher.git
    base: $HOME/.basher
    post-install:
    - export PATH=$BASHER_BASE/bin:$BASHER_BASE/cellar/bin:$PATH

  Bats:
    installer: Git
    branch: master
    repo: https://github.com/dotmpe/bats-core.git
    base: $SRC_PREFIX/github.com/dotmpe/bats-core
    post-install: |
      ( cd $BATS_BASE && ${pref} ./install.sh $PREFIX && git clean -dfx )

  Curl:
    required: true

  Docker:
    installer: Curl+Sh
    url: https://get.docker.com/

  Docker-Compose:
    install: |
      curl -L https://github.com/docker/compose/releases/download/$2/docker-compose-`uname -s`-`uname -m` >"$1"
      chmod +x "$1"

  gcalcli:
    installer: Pip

  Git:
    required: true

  git-annex-finddups:
    url: https://rawgit.com/aspiers/git-config/master/bin/git-annex-finddups

  go-up:
    bin: up
    path: ~/go/bin
    description: |
      Interactive pipes TUI app, pass a stdin and continue literally editing a
      "pipeline" while lines below update from the command after pressing return.
    install:
    - go get -u github.com/akavel/up

  go-bane:
    installer: go-get
    id: github.com/genuinetools/bane

  jolt:
    id: bazaarvoice/jolt
    bin: jolt
    installer: Basher
    description: "Transforms for JSON (Java)"
    post-install:
    - cd ~/.basher/cellar/packages/bazaarvoice/jolt/
    - git pull
    - mvn clean package

  json-spec:
    bin: jsonspec
    installer: Pip
    post-install:
    - "test -w /usr/local/bin && PREFIX=/usr/local || PREFIX=~/.local"
    - "echo '#!/bin/sh' > $PREFIX/jsonspec"
    - "echo 'python $(python -c \"import jsonspec;print jsonspec.__path__[0]\")/cli.py $@ || exit $?' >> $PREFIX/bin/jsonspec"
    - "chmod +x $PREFIX/bin/jsonspec"
    post-uninstall:
    - "test -w /usr/local/bin && rm /usr/local/bin/jsonspec || rm ~/.local/bin/jsonspec"
    scripts:
      jsonspec-validate:
        - jsonspec validate --document-json $1 --schema-json $2

  jsonspec-validate:
    dep: json-spec

  jsonwidget:
    id: jsonwidget
    installer: Pip
    bin:
      - jsonedit
      - jsonaddress
    description: |
      Generate forms from JSON schema with Python+Urwid.
      Does not work out of the box, it seems.
      No SCM. Around 2010.

      https://pypi.python.org/pypi/jsonwidget/
      http://blog.robla.net/2010/jsonwidget-python/

  MacBrew:
    required: true
    bin: brew

  # TODO: would want to use basher, but cannot use gist url. Only GH package.
  membash:
    bin: membash
    src: membash.sh
    installer: Git+Bin
    url: 'https://gist.github.com/dotmpe/045284c6522b1c24a3b5a56352d273e5'
    
  memcached:
    id: memcached
    installer: MacBrew
    post-install:
    - V=$(memcached --version | cut -f2 -d ' ')
    - cp /usr/local/Cellar/memcached/$V/homebrew.mxcl.memcached.plist ~/Library/LaunchAgents/
    - launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.memcached.plist
    - echo $V

  NodeJS:
    required: true

  NPM:
    required: true
    depends: NodeJS

  Pip:
    required: true
    depends: Python

  Python:
    required: true

  todotxt-machine:
    id: todotxt-machine
    bin: True
    installer: Pip
    description: |
      Python+Urwid plain text todo keeper. Nice client.
      Just the features needed for editing a single TODO list.
      Has projects, contexts, filters, priorities A-F.
      And some keys: due:<YYYY-M-D>

      https://github.com/AnthonyDiGirolamo/todotxt-machine

  x11docker:
    installer: url
    url: https://raw.githubusercontent.com/mviereck/x11docker/master/x11docker
