# varspec                                      cmdspec                        #

# Variable- and command specs for baseline suite. +script_mpe
# Usage:
#   ./sh-main spec Tab Cmd-Glob


# varspec                                      cmdspec                        #

true                                           test -n "$scriptname"
true                                           test -z "$scriptpath"
true                                           test -z "$SCRIPTPATH" || test "$(whoami)" = "travis"
true                                           test -n "$LOG"
true                                           test -z "$INIT_LOG"

set -u
 /SCRIPTPATH                                   test -z "${SCRIPTPATH:-}"

true                                           . ./sh-main
CWD=$PWD                                       . ./tools/sh/env.sh
CWD=$PWD                                       . ./tools/ci/env.sh

true                                           . ./tools/sh/util.sh
. ./tools/sh/util.sh                           . ./tools/ci/util.sh

set -euo pipefail

 . ./tools/sh/env.sh                           echo 1.1. $SCRIPTPATH
 /SCRIPTPATH
  . ./tools/sh/env.sh                          echo 1.2. $SCRIPTPATH

 . ./tools/ci/env.sh                           echo 2.1. $SCRIPTPATH
 /SCRIPTPATH
  . ./tools/ci/env.sh                          echo 2.2. $SCRIPTPATH

 #verbosity=4; CWD=$PWD;
 export sh_tools=tools/sh ci_tools=tools/ci
  . ./tools/sh/util.sh
   . ./tools/sh/parts/env-dev.sh
    sh_include env-log
     sh_include remove-dupes unique-paths
      sh_include env-scriptpath-deps lib-load
        sh_include env-info                    true 3.1.

# FIXME: ./sh-main: line 203: ci_exec: command not found
#true                                           ./sh-main lines sh-baseline.tab >/dev/null

set -euo pipefail
  true                                         . ./tools/sh/parts/env-strict.sh
  DOCKER_NS=dotmpe                             . ./tools/sh/parts/env-docker-hub.sh
  # XXX: sh_include required:
  #true                                         . ./tools/sh/parts/env-dev.sh
  true                                         . ./tools/sh/parts/env-0.sh
  true                                         . ./tools/sh/parts/env-0-src.sh
  true                                         . ./tools/sh/parts/env-std.sh
  true                                         . ./tools/sh/parts/env-test.sh
  true                                         . ./tools/sh/parts/env-test-bats.sh

# varspec                                      cmdspec                        #
#true                                           ./sh-main run-parts build.txt Sh 0
#true                                           ./sh-main run-parts build.txt U-S 0
#true                                           ./sh-main run-parts build.txt Main 0
#true                                           ./sh-main run-parts build.txt Main 0 1
#true                                           ./sh-main run-parts build.txt Test 0
#true                                           ./sh-main run-parts build.txt CI 0 1 2 3 4 || true
#LOG=$PWD/tools/sh/log.sh                       ./tools/git-hooks/pre-commit.sh


# varspec                                      cmdspec                        #

set -euo pipefail
 CWD=$PWD;
  . tools/sh/env.sh                            . ./tools/sh/init.sh

# ./bin/u-s update
#   f_lib_load= util_mode= default_lib=         . ./tools/sh/init-wrapper.sh
#    SCRIPTPATH=


# varspec                                      cmdspec                        #

#verbosity=5 VND_SRC_PREFIX=$HOME/build
# export CWD=$PWD verbosity VND_SRC_PREFIX
#  set -euo pipefail
#   true                                        bats test/baseline/bats.bats
#   . tools/sh/env.sh
#    . tools/ci/util.sh
#        v=4                                    ci_test test/baseline/bats.bats
#        v=4                                    ci_test_negative test/baseline/bats-negative.bats
#      v=4                                      ci_test test/unit/std-stack.bats
#      v=4                                      ci_test test/baseline/1-shell.bats
#      v=4                                      ci_test test/baseline/2-bash.bats
#      v=5                                      ci_test test/baseline/3-project.bats
#      v=4                                      ci_test test/baseline/4-mainlibs.bats
#      v=4                                      ci_test test/baseline/git.bats
#      v=4                                      ci_test test/baseline/realpath.bats
#      v=4                                      ci_test test/baseline/redo.bats
#      v=4                                      ci_test test/tasks-spec.bats -f baseline

# FIXME: special syntax for bats; severly misbehaving, killing off the wrong process?
#v=4                                            ; ( bats test/baseline/*.bats )


# varspec                                      cmdspec                        #

# Sync: U-S:                                     vim:ft=bash:nowrap:cc=47,79:
